{
  "apiVersion": "v1",
  "kind": "Namespace",
  "metadata": {
    "name": "production",
    "labels": {
      "name": "production"
    }
  }
}
-----kafka-----
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: kafka
    name: kafka
  name: kafka-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kafka
  template:
    metadata:
      labels:
        app: kafka
        name: kafka
    spec:
      containers:
        - env:
            - name: KAFKA_ADVERTISED_PORT
              value: "30050"
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: 47.100.222.11
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper-service.production:2181
            - name: KAFKA_BROKER_ID
              value: "1"
          image: wurstmeister/kafka
          imagePullPolicy: IfNotPresent
          name: kafka
          ports:
            - containerPort: 9092
              protocol: TCP
          resources:
            limits:
              cpu: "1"
      terminationGracePeriodSeconds: 30
-----kafka service-----
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  selector:
    app: kafka
  type: NodePort
  ports:
    - name: kafka-port
      port: 9092
      targetPort: 9092
      nodePort: 30050
-----zookeeper-----
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: zookeeper
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - image: wurstmeister/zookeeper
          name: zookeeper
          ports:
            - containerPort: 2181
              protocol: TCP
          resources:
            limits:
              cpu: "1"
-----zookeeper service-----
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
spec:
  selector:
    app: zookeeper
  ports:
    - name: zookeeper-port
      port: 2181
      targetPort: 2181